VermoegenSteuerKreis <- read.csv('https://data.stadt-zuerich.ch/dataset/fd_median_vermoegen_kreis_od1008/download/WIR100OD1008.csv')
kable(VermoegenSteuerKreis[1:6,1:4], caption = "Original data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis[1:6,4:8])#, caption = "Original data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
VermoegenSteuerKreis$Category %>% as.factor()
kable(VermoegenSteuerKreis[1:4,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
VermoegenSteuerKreis$Category %>% as.factor()
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
#VermoegenSteuerKreis <-
VermoegenSteuerKreis %>%
VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")] %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE, # prevents warnings that are generated by code from appearing in the finished.
include = FALSE # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
#setwd("/Users/leonidgavrilyuk/Desktop/R_Bootcamp/RBootcamp")
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
kable(d.gen[1:6, ], caption = "Original data set: Turnout in the city and municipal council elections since 2006, by city district")
#Create the "DistrictName" column that stores the content of the parenthesis.
#E.g. Rathaus (Kreis 1) - > Kreis 1
library (stringr)
d.gen$DistrictName <- str_extract_all(d.gen$Qname,"\\([^()]+\\)")
d.gen$DistrictName <- substring(d.gen$DistrictName, 2,
nchar(d.gen$DistrictName)-1)
head(d.gen, 30)
##Create the DistrictNr column that stores only the number of the electoral district.
d.gen$DistrictNr <- str_sub(d.gen$DistrictName,
start = 6,
end = -1)
head(d.gen,10)
# to reflect the fact some city districts are merged for the elections (e.g. "Kreis 1+2")
library(dplyr)
d.gen <- d.gen %>%
mutate(DistrictName = recode(DistrictName,
'Kreis 1' = 'Kreis 1+2',
'Kreis 2' = 'Kreis 1+2',
'Kreis 4' = 'Kreis 4+5',
'Kreis 5' = 'Kreis 4+5',
'Kreis 7' ='Kreis 7+8',
'Kreis 8' ='Kreis 7+8'))
head(d.gen,34)
#Calculate mean by each group and year using dplyr's group_by
df_1 <- d.gen %>% group_by(Jahr, DistrictName) %>% summarise(PercentageOfDistrict =mean(Beteiligung))
head(df_1)
#Calculate sum of the voters for each district and year using dplyr's group_by.
#Calculate percentage of each district's voters relative to the total number of the city voters.
df_2 <- d.gen %>%
group_by(Jahr, DistrictName) %>%
summarise(TotalVoted=sum(teilnehmende)) %>%
transmute (DistrictName, PercentageOfCity = (TotalVoted/sum(TotalVoted))*100)
head(df_2)
#Merge with dplyr
df_fin <- df_1 %>% inner_join(df_2)
head(df_fin,10)
#Reorder so that DistrictName is sorted not alphabetically
#Change "DistrictName" to numeric
#Change "Jahr" and "DistrictName" to factors
df_fin$DistrictName <- as.factor(df_fin$DistrictName)
df_fin$Jahr <- as.factor(df_fin$Jahr)
sapply(df_fin, class)
#Rename Jahr to English version
df_fin %>%
rename(
Year = Jahr
)
df_fin[order(df_fin$Jahr, df_fin$DistrictName), ]
head(df_fin, 30)
#install.packages("writexl")
#library("writexl")
#write_xlsx(df,"/Users/leonidgavrilyuk/Desktop/RBootcamp/R_Bootcamp_Feb2022/DataSets/df.xlsx")
kable(df_fin[1:6, ], caption = "Final dataset: Turnout by electoral district")
library(ggplot2)
#install.packages("cowplot")
library(cowplot)
p1 <- ggplot(data=df_fin, aes(x=Jahr, y=PercentageOfDistrict, group=DistrictName)) +
geom_line(aes(color=DistrictName))+
geom_point(aes(color=DistrictName))
p2 <- ggplot(data=df_fin, aes(x=Jahr, y=PercentageOfCity, group=DistrictName)) +
geom_line(aes(color=DistrictName))+
geom_point(aes(color=DistrictName))
plot(p1)
#plot(p2)
#setwd("/Users/leonidgavrilyuk/Desktop/R_Bootcamp/RBootcamp")
parties <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_stimmant_seit1913_od7000/download/POL700OD7000.csv", header = TRUE, sep = ",")
kable(parties[1:6, ], caption = "Original data set: Municipal elections vote share, by party and electoral district since 1913.")
#Choose only relevant time period (years 2006-2018) and eight still existing parties.
library(dplyr)
parties <- parties[parties$Jahr %in% c(2006, 2010, 2014, 2018), ]
parties <- parties[parties$Partei %in% c("SP", "BGB/SVP", "GPS", "FDP",
"GLP", "CVP/Die Mitte", "AL", "EVP"), ]
parties <- parties[parties$Wahlkreis %in% c("Kreis 1 + 2 (ab 2006)", "Kreis 9",
"Kreis 11 (ab 1974)", "Kreis 3",
"Kreis 4 + 5 (ab 2006)", "Kreis 10",
"Kreis 12 (ab 1974)", "Kreis 6",
"Kreis 7 + 8 (ab 2006)"), ]
#Change the names of the electoral districts.
library(stringr)
parties$Wahlkreis <- str_replace(parties$Wahlkreis, " \\s*\\([^\\)]+\\)", "")
parties
#Rename the columns to keep them in line with the other tables (e.g. "Wahlkreis" to "DistrictName").
parties <- parties %>%
rename(
DistrictName = Wahlkreis,
Year = Jahr,
Party = Partei,
Result = Stimmenanteil) %>%
select (-ParteiNr, -WahlkreisSort)
#Transform the table into wide format.
library(tidyr)
parties <- pivot_wider(parties,
names_from = "Party",
values_from = "Result")
parties
kable (parties[1:8, ], caption = "Final dataset: Municipal elections vote share, by party and electoral district, 2006-2018.")
# Set cache to true
VermoegenSteuerKreis <- read.csv('https://data.stadt-zuerich.ch/dataset/fd_median_vermoegen_kreis_od1008/download/WIR100OD1008.csv')
kable(VermoegenSteuerKreis[1:6,1:4], caption = "Original data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis[1:6,4:8])#, caption = "Original data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
VermoegenSteuerKreis$Category %>% as.factor()
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
VermoegenSteuerKreis$Category %>% as.factor()
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis %>% head(), caption = "Final data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis$SteuerTarifSort %>% as.factor()
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
kable(VermoegenSteuerKreis %>% head(), caption = "Final data set: Distribution wealth tax per category, district and year")
# Set cache to true
VermoegenSteuerKreis <- read.csv('https://data.stadt-zuerich.ch/dataset/fd_median_vermoegen_kreis_od1008/download/WIR100OD1008.csv')
kable(VermoegenSteuerKreis[1:6,1:4], caption = "Original data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis[1:6,4:8])#, caption = "Original data set: Distribution wealth tax per category, district and year")
# Set cache to true
VermoegenSteuerKreis <- read.csv('https://data.stadt-zuerich.ch/dataset/fd_median_vermoegen_kreis_od1008/download/WIR100OD1008.csv')
kable(VermoegenSteuerKreis[1:6,1:4], caption = "Original data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis[1:6,4:8])
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis$SteuerTarifSort %>% as.factor()
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
kable(VermoegenSteuerKreis %>% head(), caption = "Final data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis$SteuerTarifSort %>% as.factor()
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis$SteuerTarifSort %>% as.factor()
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort)
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE, # prevents warnings that are generated by code from appearing in the finished.
include = FALSE # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
#setwd("/Users/leonidgavrilyuk/Desktop/R_Bootcamp/RBootcamp")
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
kable(d.gen[1:6, ], caption = "Original data set: Turnout in the city and municipal council elections since 2006, by city district")
#Create the "DistrictName" column that stores the content of the parenthesis.
#E.g. Rathaus (Kreis 1) - > Kreis 1
library (stringr)
d.gen$DistrictName <- str_extract_all(d.gen$Qname,"\\([^()]+\\)")
d.gen$DistrictName <- substring(d.gen$DistrictName, 2,
nchar(d.gen$DistrictName)-1)
head(d.gen, 30)
##Create the DistrictNr column that stores only the number of the electoral district.
d.gen$DistrictNr <- str_sub(d.gen$DistrictName,
start = 6,
end = -1)
head(d.gen,10)
# to reflect the fact some city districts are merged for the elections (e.g. "Kreis 1+2")
library(dplyr)
d.gen <- d.gen %>%
mutate(DistrictName = recode(DistrictName,
'Kreis 1' = 'Kreis 1+2',
'Kreis 2' = 'Kreis 1+2',
'Kreis 4' = 'Kreis 4+5',
'Kreis 5' = 'Kreis 4+5',
'Kreis 7' ='Kreis 7+8',
'Kreis 8' ='Kreis 7+8'))
head(d.gen,34)
#Calculate mean by each group and year using dplyr's group_by
df_1 <- d.gen %>% group_by(Jahr, DistrictName) %>% summarise(PercentageOfDistrict =mean(Beteiligung))
head(df_1)
#Calculate sum of the voters for each district and year using dplyr's group_by.
#Calculate percentage of each district's voters relative to the total number of the city voters.
df_2 <- d.gen %>%
group_by(Jahr, DistrictName) %>%
summarise(TotalVoted=sum(teilnehmende)) %>%
transmute (DistrictName, PercentageOfCity = (TotalVoted/sum(TotalVoted))*100)
head(df_2)
#Merge with dplyr
df_fin <- df_1 %>% inner_join(df_2)
head(df_fin,10)
#Reorder so that DistrictName is sorted not alphabetically
#Change "DistrictName" to numeric
#Change "Jahr" and "DistrictName" to factors
df_fin$DistrictName <- as.factor(df_fin$DistrictName)
df_fin$Jahr <- as.factor(df_fin$Jahr)
sapply(df_fin, class)
#Rename Jahr to English version
df_fin %>%
rename(
Year = Jahr
)
df_fin[order(df_fin$Jahr, df_fin$DistrictName), ]
head(df_fin, 30)
#install.packages("writexl")
#library("writexl")
#write_xlsx(df,"/Users/leonidgavrilyuk/Desktop/RBootcamp/R_Bootcamp_Feb2022/DataSets/df.xlsx")
kable(df_fin[1:6, ], caption = "Final dataset: Turnout by electoral district")
library(ggplot2)
#install.packages("cowplot")
library(cowplot)
p1 <- ggplot(data=df_fin, aes(x=Jahr, y=PercentageOfDistrict, group=DistrictName)) +
geom_line(aes(color=DistrictName))+
geom_point(aes(color=DistrictName))
p2 <- ggplot(data=df_fin, aes(x=Jahr, y=PercentageOfCity, group=DistrictName)) +
geom_line(aes(color=DistrictName))+
geom_point(aes(color=DistrictName))
plot(p1)
#plot(p2)
#setwd("/Users/leonidgavrilyuk/Desktop/R_Bootcamp/RBootcamp")
parties <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_stimmant_seit1913_od7000/download/POL700OD7000.csv", header = TRUE, sep = ",")
kable(parties[1:6, ], caption = "Original data set: Municipal elections vote share, by party and electoral district since 1913.")
#Choose only relevant time period (years 2006-2018) and eight still existing parties.
library(dplyr)
parties <- parties[parties$Jahr %in% c(2006, 2010, 2014, 2018), ]
parties <- parties[parties$Partei %in% c("SP", "BGB/SVP", "GPS", "FDP",
"GLP", "CVP/Die Mitte", "AL", "EVP"), ]
parties <- parties[parties$Wahlkreis %in% c("Kreis 1 + 2 (ab 2006)", "Kreis 9",
"Kreis 11 (ab 1974)", "Kreis 3",
"Kreis 4 + 5 (ab 2006)", "Kreis 10",
"Kreis 12 (ab 1974)", "Kreis 6",
"Kreis 7 + 8 (ab 2006)"), ]
#Change the names of the electoral districts.
library(stringr)
parties$Wahlkreis <- str_replace(parties$Wahlkreis, " \\s*\\([^\\)]+\\)", "")
parties
#Rename the columns to keep them in line with the other tables (e.g. "Wahlkreis" to "DistrictName").
parties <- parties %>%
rename(
DistrictName = Wahlkreis,
Year = Jahr,
Party = Partei,
Result = Stimmenanteil) %>%
select (-ParteiNr, -WahlkreisSort)
#Transform the table into wide format.
library(tidyr)
parties <- pivot_wider(parties,
names_from = "Party",
values_from = "Result")
parties
kable (parties[1:8, ], caption = "Final dataset: Municipal elections vote share, by party and electoral district, 2006-2018.")
# Set cache to true
VermoegenSteuerKreis <- read.csv('https://data.stadt-zuerich.ch/dataset/fd_median_vermoegen_kreis_od1008/download/WIR100OD1008.csv')
VermoegenSteuerKreis$SteuerTarifSort %>% as.factor()
kable(VermoegenSteuerKreis[1:6,1:4], caption = "Original data set: Distribution wealth tax per category, district and year")
kable(VermoegenSteuerKreis[1:6,4:8])
# Drop columns KreisLang and SteuerTarifLang
VermoegenSteuerKreis <- VermoegenSteuerKreis[,! names(VermoegenSteuerKreis) %in% c("KreisLang", "SteuerTarifLang","SteuerVermoegen_p25","SteuerVermoegen_p75")]
VermoegenSteuerKreis %>%
rename(
DistrictNumber = KreisSort,
Year = SteuerJahr,
Wealth = SteuerVermoegen_p50,
Category = SteuerTarifSort
)
kable(VermoegenSteuerKreis[1:6,], caption = "Final data set: Distribution wealth tax per category, district and year")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
include = FALSE, # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE # prevents warnings that are generated by code from appearing in the finished.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
include = FALSE, # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE # prevents warnings that are generated by code from appearing in the finished.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
kable(d.gen[1:6, ], caption = "Original data set: Turnout in the city and municipal council elections since 2006, by city district")
#Create the "DistrictName" column that stores the content of the parenthesis.
#E.g. Rathaus (Kreis 1) - > Kreis 1
library (stringr)
d.gen$DistrictName <- str_extract_all(d.gen$Qname,"\\([^()]+\\)")
d.gen$DistrictName <- substring(d.gen$DistrictName, 2,
nchar(d.gen$DistrictName)-1)
head(d.gen, 30)
##Create the DistrictNr column that stores only the number of the electoral district.
d.gen$DistrictNr <- str_sub(d.gen$DistrictName,
start = 6,
end = -1)
head(d.gen,10)
# to reflect the fact some city districts are merged for the elections (e.g. "Kreis 1+2")
library(dplyr)
d.gen <- d.gen %>%
mutate(DistrictName = recode(DistrictName,
'Kreis 1' = 'Kreis 1+2',
'Kreis 2' = 'Kreis 1+2',
'Kreis 4' = 'Kreis 4+5',
'Kreis 5' = 'Kreis 4+5',
'Kreis 7' ='Kreis 7+8',
'Kreis 8' ='Kreis 7+8'))
head(d.gen,34)
#Calculate mean by each group and year using dplyr's group_by
df_1 <- d.gen %>% group_by(Jahr, DistrictName) %>% summarise(PercentageOfDistrict =mean(Beteiligung))
head(df_1)
#Calculate sum of the voters for each district and year using dplyr's group_by.
#Calculate percentage of each district's voters relative to the total number of the city voters.
df_2 <- d.gen %>%
group_by(Jahr, DistrictName) %>%
summarise(TotalVoted=sum(teilnehmende)) %>%
transmute (DistrictName, PercentageOfCity = (TotalVoted/sum(TotalVoted))*100)
head(df_2)
#Merge with dplyr
df_fin <- df_1 %>% inner_join(df_2)
head(df_fin,10)
#Reorder so that DistrictName is sorted not alphabetically
#Change "DistrictName" to numeric
#Change "Jahr" and "DistrictName" to factors
df_fin$DistrictName <- as.factor(df_fin$DistrictName)
df_fin$Jahr <- as.factor(df_fin$Jahr)
sapply(df_fin, class)
#Rename Jahr to English version
df_fin %>%
rename(
Year = Jahr
)
df_fin[order(df_fin$Jahr, df_fin$DistrictName), ]
head(df_fin, 30)
#install.packages("writexl")
#library("writexl")
#write_xlsx(df,"/Users/leonidgavrilyuk/Desktop/RBootcamp/R_Bootcamp_Feb2022/DataSets/df.xlsx")
kable(df_fin[1:6, ], caption = "Final dataset: Turnout by electoral district")
library(ggplot2)
#install.packages("cowplot")
library(cowplot)
p1 <- ggplot(data=df_fin, aes(x=Jahr, y=PercentageOfDistrict, group=DistrictName)) +
geom_line(aes(color=DistrictName))+
geom_point(aes(color=DistrictName))
p2 <- ggplot(data=df_fin, aes(x=Jahr, y=PercentageOfCity, group=DistrictName)) +
geom_line(aes(color=DistrictName))+
geom_point(aes(color=DistrictName))
plot(p1)
#plot(p2)
parties <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_stimmant_seit1913_od7000/download/POL700OD7000.csv", header = TRUE, sep = ",")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
include = FALSE, # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE # prevents warnings that are generated by code from appearing in the finished.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
kable(d.gen[1:6, ], caption = "Original data set: Turnout in the city and municipal council elections since 2006, by city district")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
include = FALSE, # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE # prevents warnings that are generated by code from appearing in the finished.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
# Set echo, include, warning, message to FALSE
knitr::opts_chunk$set(
echo = FALSE, # prevents code, but not the results from appearing in the finished file. This is a useful way to embed figures.
include = FALSE, # prevents code and results from appearing in the finished file. R Markdown still runs the code in the chunk, and the results can be used by other chunks.
message = FALSE, # prevents messages that are generated by code from appearing in the finished file.
warning = FALSE # prevents warnings that are generated by code from appearing in the finished.
)
# Import libraries
library(knitr)
library(lattice)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
#toc: yes
#toc_depth: 4
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
setwd("~/HSLU_MBP/3_semester/RB01_R_Bootcamp/rBootCamp/ProjectWork")
#d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
d.gen <- read.table("./POL700OD7005.csv", header = TRUE, sep = ",")
#d.gen <- read.table("https://data.stadt-zuerich.ch/dataset/politik_gemeinderatswahlen_btg_urnengang_quartier_od7005/download/POL700OD7005.csv", header = TRUE, sep = ",")
d.gen <- read.table("./data/POL700OD7005.csv", header = TRUE, sep = ",")
kable(d.gen[1:6, ], caption = "Original data set: Turnout in the city and municipal council elections since 2006, by city district")
